<% include include/head.ejs %>

<body>
  
  <main role="main" class="flex-shrink-0">
    <div class="container">
      <h1 class="mt-5"><%= title %></h1>
      <p class="lead">
        <center>
          <a href="https://twitter.com/gzileni?ref_src=twsrc%5Etfw" class="twitter-follow-button" data-size="large" data-show-count="false">Follow @gzileni</a><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
          <a class="github-button" href="https://github.com/clementinEOS-it" data-color-scheme="no-preference: light; light: light; dark: dark;" data-size="large" aria-label="Follow @clementinEOS-it on GitHub">Follow @clementinEOS-it</a>
        </center>
      </p>
      <p class="lead"> 
        <div class="row" id="chart" width="100%"></div>
      </p>
      <!--
      <p>Use <a href="{{ site.baseurl }}/docs/{{ site.docs_version }}/examples/sticky-footer-navbar/">the sticky footer with a fixed navbar</a> if need be, too.</p>
      -->
      <p>
        <h2>Blocks</h2>
        <div class="list-group" id="actions"></div>
        <div class="alert alert-info" role="alert" id="success"></div>
        <div class="alert alert-warning" role="alert" id="warning"></div>
      </p>
    </div>
  </main>  

  <% include include/footer.ejs %>
  <% include include/scripts.ejs %>
  <% include include/google_analytics.ejs %>
  
  <script src="js/realTimeLineChart.js"></script>

  <script>
    'use strict';

    var socket = io();

    var lineArr = [];
    var duration = 2000;

    $('#warning').hide();
    
    // var wm = $("#graph").outerWidth();
    var wl = $("#chart").outerWidth();
    var chartLine = realTimeLineChart(wl, 500, duration);

    socket.on('block', (_data) => {

      // console.log('CLIENT BLOCK block -> ' + _data);

      var data = JSON.parse(_data);

      updateLine(data.block_time, data.receipt.cpu_usage_us, data.net_usage);

      updateBlock(data.action_traces);

      /*

       { 
         "id":"1338e5b7cc21026045952c685be2c38cfbcbc1a69023cfe9e520ae775954ee98",
         "block_num":1305647,
         "block_time":"2020-04-30T18:07:08.000",
         "producer_block_id":null,
         "receipt":{
           "status":"executed",
           "cpu_usage_us":321,
           "net_usage_words":34
          },
          "elapsed":321,
          "net_usage":272,
          "scheduled":false,
          "action_traces":[{
              "action_ordinal":1,
              "creator_action_ordinal":0,
              "closest_unnotified_ancestor_action_ordinal":0,
              "receipt":{
                "receiver":"gqeaceafdbkq",
                "act_digest":"aae8483f7aff7e486cc16ee482e173c9f1a146355b698d2c35b95d1e8e53215a",
                "global_sequence":1355168,
                "recv_sequence":20498,
                "auth_sequence":[["gqeaceafdbkq",20601]],
                "code_sequence":28,
                "abi_sequence":28
              },
              "receiver":"gqeaceafdbkq",
              "act":{
                "account":"gqeaceafdbkq",
                "name":"send",
                "authorization":[{"actor":"gqeaceafdbkq","permission":"active"}],
                "data":{
                  "dateISO":"2020-02-24",
                  "key":"117b870a5cd8f75a789c54a318c6dbcf5fafd33bc6ee41159d3715e7757ca49b",
                  "source_hash":"c9298ef6841a54fb569f8e55e05e9ff7e7c34853213735981264fb02cb31a78a",
                  "lat":"45.07327449999999658",
                  "lng":"7.68068748299999982",
                  "hws":2,"ic":0,"to":2,"hi":1,"tot_cp":3,"tot_new_cp":0,"dh":0,"dead":0,"tot_c":3,"sw":141,"tc":0
                },
                "hex_data":"0a323032302d30322d3234117b870a5cd8f75a789c54a318c6dbcf5fafd33bc6ee41159d3715e7757ca49bc9298ef6841a54fb569f8e55e05e9ff7e7c34853213735981264fb02cb31a78abc900e0f618946405020b92306b91e400200000000000000000000000000000002000000000000000100000000000000030000000000000000000000000000000000000000000000000000000000000003000000000000008d000000000000000000000000000000"
              },
              "context_free":false,
              "elapsed":169,
              "console":"",
              "trx_id":"1338e5b7cc21026045952c685be2c38cfbcbc1a69023cfe9e520ae775954ee98",
              "block_num":1305647,
              "block_time":"2020-04-30T18:07:08.000",
              "producer_block_id":null,
              "account_ram_deltas":[],
              "except":null,
              "error_code":null,
              "inline_traces":[]
            }],
          "account_ram_delta":null,
          "except":null,
          "error_code":null
        }

      */
    });

    socket.on('update', data => {
      // console.log('CLIENT BLOCK update -> ' + data);
      $('#success').text(data);
    });

    socket.on('error', data => {
      console.log('CLIENT BLOCK error -> ' + data);
      $('#warning').show();
      $('#warning').text(data);
    });

    let updateBlock = (data) => {
        
      _.forEach(data, item => {

        var html = '<a href="#" class="list-group-item list-group-item-action">' +
                  '  <div class="d-flex w-100 justify-content-between">' +
                  '    <h5 class="mb-1">' + item.block_num + '</h5>' +
                  '      <small>' + item.trx_id + '</small>' +
                  '  </div>' +
                  '  <p class="mb-1"><pre><code>' + JSON.stringify(item.act.data) + '</code></pre></p>' +
                  '  <small>' + item.block_time + '</small>' +
                  '</a>';
        $('#actions').html(html);

      });
    }

    let updateLine = (date, cpu, net) => {

      var now = new Date(date);

      var lineData = {
        time: now,
        cpu: cpu,
        net: net
      };

      lineArr.push(lineData);

      if (lineArr.length > 30) {
        lineArr.shift();
      }

      d3.select("#chart").datum(lineArr).call(chartLine);

    };

  </script>

  </body>
</html>
